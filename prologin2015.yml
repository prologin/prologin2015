name: prologin2015

constant:
  -
    cst_name: TAILLE_TERRAIN
    cst_val: 40
    cst_comment: Taille du terrain (longueur et largeur)

  -
    cst_name: NB_TOURS
    cst_val: 100
    cst_comment: Nombre de tours à jouer avant la fin de la partie

  -
    cst_name: NB_POINTS_DEPLACEMENT
    cst_val: 8
    cst_comment: Nombre de points de déplacements par tour

  -
    cst_name: NB_POINTS_ACTION
    cst_val: 200
    cst_comment: Nombre de points d'action à chaque tour

  -
    cst_name: COUT_CAPTURE
    cst_val: 5
    cst_comment: Nombre de points d'actions que coûte la capture d'un portail

  -
    cst_name: COUT_LIEN
    cst_val: 5
    cst_comment: Nombre de points d'actions que coûte la création d'un lien

  -
    cst_name: COUT_ATTAQUE
    cst_val: 2
    cst_comment: Nombre de points d'actions que coûte l'attaque

  -
    cst_name: COUT_BOUCLIER
    cst_val: 10
    cst_comment: Nombre de points d'actions que coûte l'attaque

  -
    cst_name: COUT_VIRUS
    cst_val: 100
    cst_comment: Nombre de points d'actions que coûte l'utilisation d'un virus

  -
    cst_name: COUT_BOOST_VITESSE
    cst_val: 10
    cst_comment: Nombre de points d'actions que coûte un boost de vitesse

  -
    cst_name: GAIN_BOOST_VITESSE
    cst_val: 1
    cst_comment: Nombre de points de déplacement donnés par le boost de vitesse

  -
    cst_name: ENERGIE_PORTAIL
    cst_val: 100
    cst_comment: L'énergie initiale d'un portal après sa capture

  -
    cst_name: MAX_BOUCLIERS
    cst_val: 4
    cst_comment: Nombre maximum de boucliers sur un même portail.

  -
    cst_name: ENERGIE_BOUCLIER
    cst_val: 20
    cst_comment: Quantité d'énergie supplémentaire conférée à un portail par un bouclier.



enum:
  -
    enum_name: erreur
    enum_summary: "Erreurs possibles"
    enum_field:
      - [ok, "L'action a été exécutée avec succès"]
      - [pa_insuffisants, "Vous ne possédez pas assez de points d'action pour cette action."]
      - [non_portail, "La position sur laquelle vous tentez d'agir n'est pas un portail."]
      - [position_invalide, "La position spécifiée n'est pas valide (hors de la carte)."]
      - [trop_loin, "La destination est trop éloignée."]
      - [mauvaise_appartenance, "Le portail n'appartient pas à la bonne personne (peut inclure 'neutre', bonne formulation à trouver)."]
      - [intersection_lien, "Ce lien croise des liens existants, il ne peut pas être construit."]
      - [portail_dans_champ, "L'une des extrémités de ce lien est dans un champ existant, il ne peut pas être construit."]
      - [limite_boucliers_atteinte, "Ce portail est déjà équipé du nombre maximal de boucliers."]

struct:
  -
    str_name: position
    str_summary: Position sur la carte, donnée par deux coordonnées.
    str_tuple: yes
    str_field:
      - [x, int, "Coordonnée en X"]
      - [y, int, "Coordonnée en Y"]
  -
    str_name: lien
    str_summary: Représente un lien
    str_tuple: no
    str_field:
      - [extr1, position, "Première extrémité du lien. The endpoints are guaranteed to be given in lexicographical order (todo trouver une traduction de cette construction)."]
      - [extr2, position, "Seconde extrémité du lien."]
      - [joueur, int, "Joueur possédant ce lien."]
  -
    str_name: champ
    str_summary: Représente un champ.
    str_tuple: no
    str_field:
      - [som1, position, "Première sommet du champ. ordre lexico blabla"]
      - [som2, position, "Deuxème sommet du champ."]
      - [som3, position, "Troisième sommet du champ."]
      - [joueur, int, "Joueur possédant ce lien."]

function:

# Actions
  -
    fct_name: capturer
    fct_summary: Capture le portail où est positionné votre agent. Peut renvoyer les erreurs ``pa_insuffisants``, ``non_portail`` et ``mauvaise_appartenance``.
    fct_ret_type: erreur
    fct_arg: []

  -
    fct_name: lier
    fct_summary: Crée un lien entre le portail où se trouve votre agent et le portail de destination donné en argument. Peut renvoyer les erreurs ``pa_insuffisants``, ``non_portail`` (la position actuelle OU la cible en argument n'est pas un portail), ``position_invalide``, ``mauvaise_appartenance``, ``intersection_lien`` et ``portail_dans_champ``.
    fct_ret_type: erreur
    fct_arg:
      - [portail, position, "Portail de destination du lien."]
      
  -
    fct_name: attaquer
    fct_summary: Attaque le portail où se trouve votre agent. Peut renvoyer les erreurs ``pa_insuffisants``, ``non_portail`` et ``mauvaise_appartenance``.
    fct_ret_type: erreur
    fct_arg:
      - [energie, int, "Quantité d'énergie à retrancher au portail visé."]
    
  -
    fct_name: deplacer
    fct_summary: Déplace votre agent sur la case passée en argument. Peut renvoyer les erreurs ``position_invalide`` et ``trop_loin``.
    fct_ret_type: erreur
    fct_arg:
      - [dest, position, "Case de destination."]
      
  -
    fct_name: recharger
    fct_summary: Recharge le portail sur la case passé en argument. Peut renvoyer les erreurs ``pa_insuffisants``, ``non_portail`` (la position actuelle OU la cible en argument n'est pas un portail), ``position_invalide``, ``mauvaise_appartenance`` et ``intersection_lien`` et ``portail_dans_champ``.
    fct_ret_type: erreur
    fct_arg:
      - [portail, position, "Portail à recharger"]
      
  -
    fct_name: ajouter_bouclier
    fct_summary: Ajoute un bouclier au portail sur lequel se trouve votre agent. Peut renvoyer les erreurs ``pa_insuffisants``, ``non_portail``, ``mauvaise_appartenance`` et ``limite_boucliers_atteinte``.
    fct_ret_type: erreur
    fct_arg: []
      
  -
    fct_name: deployer_virus
    fct_summary: TODO. Peut renvoyer les erreurs ``pa_insuffisants``, ``non_portail`` et ``mauvaise_appartenance`` (si le portail est neutre).
    fct_ret_type: erreur
    fct_arg: []
      
  -
    fct_name: booster_vitesse
    fct_summary: TODO. Peut renvoyer l'erreur ``pa_insuffisants``.
    fct_ret_type: erreur
    fct_arg: []

# Fonctions de query sur les champs / les liens

  -
    fct_name: liste_liens
    fct_summary: Renvoie la liste de tous les liens présents.
    fct_ret_type: lien array
    fct_arg: []

  -
    fct_name: liste_champs
    fct_summary: Renvoie la liste de tous les champs, i.e. tous les triangles constitués par les liens présents.
    fct_ret_type: champ array
    fct_arg:
      - []

  -
    fct_name: liens_bloquants
    fct_summary: Renvoie la liste de tous les liens existants qui croisent un segment, entravant la création d'un lien.
    fct_ret_type: lien array
    fct_arg:
      - [ext1, position, "Première extrémité du segment."]
      - [ext2, position, "Seconde extrémité du segment."]

# Spécifique à une case

  -
    fct_name: case_joueur
    fct_summary: Renvoie un booléen indiquant si la case ``pos`` se trouve dans un champ appartenant au joueur ``num_joueur`` (il peut y avoir 0, 1 ou 2 joueurs pour lesquels c'est vrai pour une case donnée).
    fct_ret_type: bool
    fct_arg:
      - [pos, position, "Position de la case."]
      - [num_joueur, int, "Numéro du joueur."]

  -
    fct_name: case_champs
    fct_summary: Renvoie la liste des champs dans lesquels la case ``pos`` se trouve. Si la case est un portail, le résultat de ``champs_incidents`` sera inclus dans (mais pas forcément égal à) celui de ``case_champs``.
    fct_ret_type: champ array
    fct_arg:
      - [pos, position, "Position de la case."]

# Spécifique à un portail
# Convention : toutes ces fonctions retournent -42 si pas un portail
# TODO : écrire ça dans la documentation… CHECK : nombres négatifs en TeX en mode math ?

  -
    fct_name: portail_joueur
    fct_summary: Renvoie le numéro du joueur correspondant au portail donné, -1 si le portail est neutre. Si la position désignée n'est pas un portail, la fonction renverra -42 ; /il est conseillé d'utiliser cette fonction pour tester si une case contient un portail/.
    fct_ret_type: int
    fct_arg:
      - [portail, position, "Position du portail."]

  -
    fct_name: portail_boucliers
    fct_summary: Renvoie le nombre de boucliers présents sur un portail.
    fct_ret_type: int
    fct_arg:
      - [portail, position, "Position du portail."]

  -
    fct_name: portail_energie
    fct_summary: Renvoie la quantité d'énergie restante sur un portail.
    fct_ret_type: int
    fct_arg:
      - [portail, position, "Position du portail."]

  -
    fct_name: liens_incidents_portail
    fct_summary: Renvoie la liste de tous les liens dont le portail donné est une extrémité.
    fct_ret_type: lien array
    fct_arg:
      - [portail, position, "Position du portail."]

  -
    fct_name: champs_incidents_portail
    fct_summary: Renvoie la liste de tous les champs dont le portail donné est un sommet.
    fct_ret_type: champ array
    fct_arg:
      - [portail, position, "Position du portail."]

  -
    fct_name: champs_incidents_lien
    fct_summary: Renvoie la liste de tous les champs dont le lien donné est un côté.
    fct_ret_type: champ array
    fct_arg:
      - [lien, lien, "Structure décrivant le lien."]


# Historique (actions de l'adversaire le tour précédent)

  -
    fct_name: hist_portails_captures
    fct_summary: Renvoie la liste des portails capturés par votre adversaire au dernier tour.
    fct_ret_type: position array
    fct_arg: []
  -
    fct_name: hist_portails_detruits
    fct_summary: Renvoie la liste des portails détruits par votre adversaire au dernier tour. TODO : définir comportement si virus.
    fct_ret_type: position array
    fct_arg: []
  -
    fct_name: hist_liens_crees
    fct_summary: Renvoie la liste des liens créés par votre adversaire au dernier tour.
    fct_ret_type: position array
    fct_arg: []


# Autre
  -
    fct_name: moi
    fct_summary: Renvoie votre numéro de joueur.
    fct_ret_type: int
    fct_arg: []
  -
    fct_name: adversaire
    fct_summary: Renvoie le numéro de votre adversaire.
    fct_ret_type: int
    fct_arg: []
  -
    fct_name: position_agent
    fct_summary: Indique la position de l'agent du joueur désigné par le numéro ``id_joueur``.
    fct_ret_type: position
    fct_arg: [id_joueur, int, "Numéro du joueur."]
  -
    fct_name: score
    fct_summary: Retourne le score du joueur désigné par le numéro ``id_joueur``.
    fct_ret_type: int
    fct_arg:
      - [id_joueur, int, "Identifiant du joueur"]
  -
    fct_name: tour_actuel
    fct_summary: Retourne le numéro du tour actuel.
    fct_ret_type: int
    fct_arg: []


user_function:
  -
    fct_name: partie_init
    fct_summary: Fonction appelée au début de la partie
    fct_ret_type: void
    fct_arg: []
  -
    fct_name: jouer_tour
    fct_summary: Fonction appelée à chaque tour
    fct_ret_type: void
    fct_arg: []
  -
    fct_name: partie_fin
    fct_summary: Fonction appelée à la fin de la partie
    fct_ret_type: void
    fct_arg: []
